package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ActiviteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActiviteitAllPropertiesEquals(Activiteit expected, Activiteit actual) {
        assertActiviteitAutoGeneratedPropertiesEquals(expected, actual);
        assertActiviteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActiviteitAllUpdatablePropertiesEquals(Activiteit expected, Activiteit actual) {
        assertActiviteitUpdatableFieldsEquals(expected, actual);
        assertActiviteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActiviteitAutoGeneratedPropertiesEquals(Activiteit expected, Activiteit actual) {
        assertThat(expected)
            .as("Verify Activiteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActiviteitUpdatableFieldsEquals(Activiteit expected, Activiteit actual) {
        assertThat(expected)
            .as("Verify Activiteit relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getActiehouder()).as("check actiehouder").isEqualTo(actual.getActiehouder()))
            .satisfies(e -> assertThat(e.getAfhandeltermijn()).as("check afhandeltermijn").isEqualTo(actual.getAfhandeltermijn()))
            .satisfies(e -> assertThat(e.getActief()).as("check actief").isEqualTo(actual.getActief()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActiviteitUpdatableRelationshipsEquals(Activiteit expected, Activiteit actual) {
        assertThat(expected)
            .as("Verify Activiteit relationships")
            .satisfies(e -> assertThat(e.getAanbods()).as("check aanbods").isEqualTo(actual.getAanbods()));
    }
}
