package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubdoelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubdoelAllPropertiesEquals(Subdoel expected, Subdoel actual) {
        assertSubdoelAutoGeneratedPropertiesEquals(expected, actual);
        assertSubdoelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubdoelAllUpdatablePropertiesEquals(Subdoel expected, Subdoel actual) {
        assertSubdoelUpdatableFieldsEquals(expected, actual);
        assertSubdoelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubdoelAutoGeneratedPropertiesEquals(Subdoel expected, Subdoel actual) {
        assertThat(expected)
            .as("Verify Subdoel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubdoelUpdatableFieldsEquals(Subdoel expected, Subdoel actual) {
        assertThat(expected)
            .as("Verify Subdoel relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getActief()).as("check actief").isEqualTo(actual.getActief()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubdoelUpdatableRelationshipsEquals(Subdoel expected, Subdoel actual) {
        assertThat(expected)
            .as("Verify Subdoel relationships")
            .satisfies(e -> assertThat(e.getAandachtspunt()).as("check aandachtspunt").isEqualTo(actual.getAandachtspunt()))
            .satisfies(e -> assertThat(e.getOntwikkelwens()).as("check ontwikkelwens").isEqualTo(actual.getOntwikkelwens()));
    }
}
