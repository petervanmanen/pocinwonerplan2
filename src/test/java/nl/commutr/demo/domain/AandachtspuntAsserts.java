package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AandachtspuntAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAandachtspuntAllPropertiesEquals(Aandachtspunt expected, Aandachtspunt actual) {
        assertAandachtspuntAutoGeneratedPropertiesEquals(expected, actual);
        assertAandachtspuntAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAandachtspuntAllUpdatablePropertiesEquals(Aandachtspunt expected, Aandachtspunt actual) {
        assertAandachtspuntUpdatableFieldsEquals(expected, actual);
        assertAandachtspuntUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAandachtspuntAutoGeneratedPropertiesEquals(Aandachtspunt expected, Aandachtspunt actual) {
        assertThat(expected)
            .as("Verify Aandachtspunt auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAandachtspuntUpdatableFieldsEquals(Aandachtspunt expected, Aandachtspunt actual) {
        assertThat(expected)
            .as("Verify Aandachtspunt relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getActief()).as("check actief").isEqualTo(actual.getActief()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAandachtspuntUpdatableRelationshipsEquals(Aandachtspunt expected, Aandachtspunt actual) {
        assertThat(expected)
            .as("Verify Aandachtspunt relationships")
            .satisfies(e -> assertThat(e.getAanbods()).as("check aanbods").isEqualTo(actual.getAanbods()));
    }
}
