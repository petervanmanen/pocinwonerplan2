package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HoofddoelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofddoelAllPropertiesEquals(Hoofddoel expected, Hoofddoel actual) {
        assertHoofddoelAutoGeneratedPropertiesEquals(expected, actual);
        assertHoofddoelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofddoelAllUpdatablePropertiesEquals(Hoofddoel expected, Hoofddoel actual) {
        assertHoofddoelUpdatableFieldsEquals(expected, actual);
        assertHoofddoelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofddoelAutoGeneratedPropertiesEquals(Hoofddoel expected, Hoofddoel actual) {
        assertThat(expected)
            .as("Verify Hoofddoel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofddoelUpdatableFieldsEquals(Hoofddoel expected, Hoofddoel actual) {
        assertThat(expected)
            .as("Verify Hoofddoel relevant properties")
            .satisfies(e -> assertThat(e.getBegindatum()).as("check begindatum").isEqualTo(actual.getBegindatum()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofddoelUpdatableRelationshipsEquals(Hoofddoel expected, Hoofddoel actual) {
        assertThat(expected)
            .as("Verify Hoofddoel relationships")
            .satisfies(e -> assertThat(e.getSubdoel()).as("check subdoel").isEqualTo(actual.getSubdoel()));
    }
}
