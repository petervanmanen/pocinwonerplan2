package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AanbodAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanbodAllPropertiesEquals(Aanbod expected, Aanbod actual) {
        assertAanbodAutoGeneratedPropertiesEquals(expected, actual);
        assertAanbodAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanbodAllUpdatablePropertiesEquals(Aanbod expected, Aanbod actual) {
        assertAanbodUpdatableFieldsEquals(expected, actual);
        assertAanbodUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanbodAutoGeneratedPropertiesEquals(Aanbod expected, Aanbod actual) {
        assertThat(expected)
            .as("Verify Aanbod auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanbodUpdatableFieldsEquals(Aanbod expected, Aanbod actual) {
        assertThat(expected)
            .as("Verify Aanbod relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getSubdoelen()).as("check subdoelen").isEqualTo(actual.getSubdoelen()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanbodUpdatableRelationshipsEquals(Aanbod expected, Aanbod actual) {
        assertThat(expected)
            .as("Verify Aanbod relationships")
            .satisfies(e -> assertThat(e.getSubdoels()).as("check subdoels").isEqualTo(actual.getSubdoels()))
            .satisfies(e -> assertThat(e.getActiviteits()).as("check activiteits").isEqualTo(actual.getActiviteits()));
    }
}
