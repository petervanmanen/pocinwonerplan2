package nl.commutr.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InwonerplanActiviteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInwonerplanActiviteitAllPropertiesEquals(InwonerplanActiviteit expected, InwonerplanActiviteit actual) {
        assertInwonerplanActiviteitAutoGeneratedPropertiesEquals(expected, actual);
        assertInwonerplanActiviteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInwonerplanActiviteitAllUpdatablePropertiesEquals(
        InwonerplanActiviteit expected,
        InwonerplanActiviteit actual
    ) {
        assertInwonerplanActiviteitUpdatableFieldsEquals(expected, actual);
        assertInwonerplanActiviteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInwonerplanActiviteitAutoGeneratedPropertiesEquals(
        InwonerplanActiviteit expected,
        InwonerplanActiviteit actual
    ) {
        assertThat(expected)
            .as("Verify InwonerplanActiviteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInwonerplanActiviteitUpdatableFieldsEquals(InwonerplanActiviteit expected, InwonerplanActiviteit actual) {
        assertThat(expected)
            .as("Verify InwonerplanActiviteit relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getActief()).as("check actief").isEqualTo(actual.getActief()))
            .satisfies(e -> assertThat(e.getAfhandeltermijn()).as("check afhandeltermijn").isEqualTo(actual.getAfhandeltermijn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInwonerplanActiviteitUpdatableRelationshipsEquals(
        InwonerplanActiviteit expected,
        InwonerplanActiviteit actual
    ) {
        assertThat(expected)
            .as("Verify InwonerplanActiviteit relationships")
            .satisfies(e -> assertThat(e.getAanbod()).as("check aanbod").isEqualTo(actual.getAanbod()));
    }
}
